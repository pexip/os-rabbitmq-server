Subject: CVE-2023-46118 (1/2): Reduce default HTTP API request body size limit to 10 MiB
 per discussion with the team.
 .
 It should be enough to accomodate a definition file with about
 100K queues.
Author: Michael Klishin <klishinm@vmware.com>
Date: Mon, 16 Oct 2023 06:48:23 -0400
Bug-Debian: https://bugs.debian.org/1056723
Origin: upstream, https://github.com/rabbitmq/rabbitmq-server/pull/9708/commits/c6d0382be4d9b6f4d0ab9466b397e353adfa92e0
Last-Update: 2023-11-27

Index: rabbitmq-server/deps/rabbitmq_management/BUILD.bazel
===================================================================
--- rabbitmq-server.orig/deps/rabbitmq_management/BUILD.bazel
+++ rabbitmq-server/deps/rabbitmq_management/BUILD.bazel
@@ -36,7 +36,8 @@ APP_ENV = """[
 
 	    {cors_allow_origins, []},
 	    {cors_max_age, 1800},
-	    {content_security_policy, "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'"}
+	    {content_security_policy, "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'"},
+	    {max_http_body_size, 10000000}
 	  ]"""
 
 DEPS = [
Index: rabbitmq-server/deps/rabbitmq_management/Makefile
===================================================================
--- rabbitmq-server.orig/deps/rabbitmq_management/Makefile
+++ rabbitmq-server/deps/rabbitmq_management/Makefile
@@ -12,7 +12,8 @@ define PROJECT_ENV
 
 	    {cors_allow_origins, []},
 	    {cors_max_age, 1800},
-	    {content_security_policy, "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'"}
+	    {content_security_policy, "script-src 'self' 'unsafe-eval' 'unsafe-inline'; object-src 'self'"},
+	    {max_http_body_size, 10000000}
 	  ]
 endef
 
Index: rabbitmq-server/deps/rabbitmq_management/priv/schema/rabbitmq_management.schema
===================================================================
--- rabbitmq-server.orig/deps/rabbitmq_management/priv/schema/rabbitmq_management.schema
+++ rabbitmq-server/deps/rabbitmq_management/priv/schema/rabbitmq_management.schema
@@ -20,6 +20,22 @@
 {mapping, "management.http_log_dir", "rabbitmq_management.http_log_dir",
     [{datatype, string}]}.
 
+%% Max HTTP body limit
+{mapping, "management.http.max_body_size", "rabbitmq_management.max_http_body_size",
+    [{datatype, integer}, {validators, ["non_negative_integer"]}]}.
+{translation, "rabbitmq_management.max_http_body_size",
+fun(Conf) ->
+    case cuttlefish:conf_get("management.http.max_body_size", Conf, undefined) of
+        %% 20 MiB allows for about 200K queues across a small (single digit) number of virtual hosts with
+        %% 10 MiB allows for about 100K queues with short names across a small (single digit) number of virtual hosts with
+        %% an equally small number of users. MK.
+        undefined                -> 10000000;
+        Val when is_integer(Val) -> Val;
+        Other                    -> cuttlefish:invalid("management.http.max_body_size must be set to a positive integer")
+    end
+end}.
+
+
 %% HTTP (TCP) listener options ========================================================
 
 %% HTTP listener consistent with Web STOMP and Web MQTT.
