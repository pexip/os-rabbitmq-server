#!/bin/sh

set -e

CONTROL=/usr/sbin/rabbitmqctl
PID_FILE=/var/run/rabbitmq/pid
INIT_LOG_DIR=/var/log/rabbitmq

remove_pid () {
    rm -f ${PID_FILE}
    rmdir `dirname ${PID_FILE}` || :
}

wait_for_process_to_stop() {
    pid=$1
    # Wait up to 15 seconds for process to exit
    i=0
    while kill -0 $pid 2>/dev/null && [ $i -lt 15 ]
    do
        sleep 1
        i=$((i+1))
    done
}

kill_process() {
    pid=$1
    if kill -0 $pid 2>/dev/null; then
        # Still around: send it SIGKILL
        kill -KILL $pid
    fi
}

force_stop_process() {
    pid=$1
    if kill -0 $pid 2>/dev/null; then
        # Process is still around; send it SIGABRT
        kill -ABRT $pid

        # Give it 30 seconds to act on the abort
        i=0
        while kill -0 $pid 2>/dev/null && [ $i -lt 30 ]
        do
            sleep 1
            i=$((i+1))
        done

        kill_process $pid
    fi
}

stop_rabbitmq () {
    if [ -f ${PID_FILE} ] ; then
        read PID <${PID_FILE} 2>/dev/null

        if [ ! -z "$PID" ] ; then
            set +e
            $CONTROL stop ${PID_FILE} >> ${INIT_LOG_DIR}/ruh_preinst_shutdown_log 2>> ${INIT_LOG_DIR}/ruh_preinst_shutdown_err &
            set -e

            wait_for_process_to_stop ${PID}
            force_stop_process ${PID}
            remove_pid
        fi
    fi
}

if [ -x "/etc/init.d/rabbitmq-server" ]; then
  PROCEED=1

  if [ -x "/usr/sbin/policy-rc.d" ]; then
    RL=`/sbin/runlevel | sed 's/.*\ //'`
    FALLBACK=`/usr/sbin/policy-rc.d rabbitmq-server stop ${RL}`
    RC=$?
    case ${RC} in
      0|105|106)
        PROCEED=1
        ;;
      *)
        PROCEED=0
        ;;
    esac
  fi

  case ${PROCEED} in
    0)
      ;;
    1)
      stop_rabbitmq
      ;;
  esac
fi

exit 0
