build --experimental_enable_bzlmod
build --registry=https://raw.githubusercontent.com/rabbitmq/bazel-central-registry/dev/

build --incompatible_strict_action_env
build --local_test_jobs=1

build --flag_alias=erlang_home=@rules_erlang//:erlang_home
build --flag_alias=erlang_version=@rules_erlang//:erlang_version
build --flag_alias=elixir_home=//:elixir_home

build:buildbuddy --bes_results_url=https://app.buildbuddy.io/invocation/
build:buildbuddy --bes_backend=grpcs://remote.buildbuddy.io
build:buildbuddy --remote_cache=grpcs://remote.buildbuddy.io
build:buildbuddy --remote_timeout=1200
build:buildbuddy --grpc_keepalive_time=360s
build:buildbuddy --grpc_keepalive_timeout=360s
build:buildbuddy --remote_download_minimal
build:buildbuddy --build_metadata=REPO_URL=https://github.com/rabbitmq/rabbitmq-server.git
build:buildbuddy --experimental_remote_cache_compression
build:buildbuddy --experimental_remote_cache_async

build:rbe --config=buildbuddy

build:rbe --remote_executor=grpcs://remote.buildbuddy.io

build:rbe --spawn_strategy=remote
build:rbe --test_strategy=""
build:rbe --jobs=50

build:rbe --crosstool_top=@rbe//cc:toolchain
build:rbe --extra_toolchains=@rbe//config:cc-toolchain

build:rbe --host_platform=//bazel/platforms:erlang_internal_platform

build:rbe --host_cpu=k8
build:rbe --cpu=k8

build:rbe-23 --config=rbe
build:rbe-23 --platforms=//bazel/platforms:erlang_linux_23_platform

build:rbe-24 --config=rbe
build:rbe-24 --platforms=//bazel/platforms:erlang_linux_24_platform

build:rbe-25 --config=rbe
build:rbe-25 --platforms=//bazel/platforms:erlang_linux_25_platform

# no-op config so that --config=local does not error
build:local --color=auto

# having bzlmod enabled seems to interfere with docker toolchain resolution,
# so we set this flag
build --@io_bazel_rules_docker//transitions:enable=false

# Try importing a user specific .bazelrc
# You can create your own by copying and editing the template-user.bazelrc template:
# cp template-user.bazelrc user.bazelrc
try-import %workspace%/user.bazelrc
